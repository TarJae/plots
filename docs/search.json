[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "The content on this page is from about.qmd. Edit that file to change how this page looks.\n“About” pages are special quarto template pages, with multiple options: https://quarto.org/docs/websites/website-about.html.\nTry changing the template type from jolla to one of the other options for a different look and feel."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "quartoCourseBlog",
    "section": "",
    "text": "Plotly treemap\n\n\n\n\n\n\n\ntreemap\n\n\n\n\n\n\n\n\n\n\n\nJan 13, 2024\n\n\ntarjae\n\n\n\n\n\n\n  \n\n\n\n\nPie Chart\n\n\n\n\n\n\n\npiechart\n\n\n\n\n\n\n\n\n\n\n\nJan 13, 2024\n\n\ntarjae\n\n\n\n\n\n\n  \n\n\n\n\nKey glyph for legend\n\n\n\n\n\n\n\nglyph\n\n\n\n\n\n\n\n\n\n\n\nJan 12, 2024\n\n\ntarjae\n\n\n\n\n\n\n  \n\n\n\n\ndotplot\n\n\n\n\n\n\n\ndotplot\n\n\n\n\n\n\n\n\n\n\n\nJan 12, 2024\n\n\ntarjae\n\n\n\n\n\n\n  \n\n\n\n\nLikert plot\n\n\n\n\n\n\n\nlikert\n\n\n\n\n\n\n\n\n\n\n\nNov 18, 2023\n\n\ntarjae\n\n\n\n\n\n\n  \n\n\n\n\nPseudomyxoma peritonei\n\n\n\n\n\n\n\nPseudomyxoma peritonei\n\n\nintraoperative image\n\n\n\n\n\n\n\n\n\n\n\nNov 18, 2023\n\n\ntarjae\n\n\n\n\n\n\n  \n\n\n\n\nPlotly animation\n\n\n\n\n\n\n\nbarplot\n\n\nplotly\n\n\nanimation\n\n\n\n\n\n\n\n\n\n\n\nNov 18, 2023\n\n\ntarjae\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/likert/index.html",
    "href": "posts/likert/index.html",
    "title": "Likert plot",
    "section": "",
    "text": "Show the code\n# https://stackoverflow.com/questions/77505716/how-to-add-count-labels-to-faceted-likert-plot-ggstatsgglikert\n\n#remotes::install_github(\"larmarange/ggstats\")\nlibrary(ggstats)\nlibrary(ggplot2)\nlibrary(dplyr)\n\nlikert_levels &lt;- c(\"strongly disagree\", \"disagree\", \"neutral\", \"agree\", \"strongly agree\", NA)\nset.seed(123)\ndf &lt;- data.frame(\n  q1 = sample(likert_levels, 100, replace = TRUE),\n  q2 = sample(likert_levels, 100, replace = TRUE),\n  q3 = sample(likert_levels, 100, replace = TRUE),\n  group = sample(c(\"pre\", \"post\"), 100, replace = TRUE)\n) |&gt; \n  mutate(across(-group, ~factor(.x, levels = setdiff(likert_levels, NA))),\n         group = factor(group, levels = c(\"pre\", \"post\")))\n\np &lt;- gglikert(\n  data = df,\n  include = q1:q3,\n  add_labels = FALSE\n)\n\np_df &lt;- layer_data(p)\np_df$correct_x &lt;- (p_df$xmax + p_df$xmin) / 2\np + annotate(geom=\"text\", x = p_df$correct_x, y = p_df$y, label = p_df$count)"
  },
  {
    "objectID": "posts/likert/index.html#likert-plot",
    "href": "posts/likert/index.html#likert-plot",
    "title": "Likert plot",
    "section": "",
    "text": "Show the code\n# https://stackoverflow.com/questions/77505716/how-to-add-count-labels-to-faceted-likert-plot-ggstatsgglikert\n\n#remotes::install_github(\"larmarange/ggstats\")\nlibrary(ggstats)\nlibrary(ggplot2)\nlibrary(dplyr)\n\nlikert_levels &lt;- c(\"strongly disagree\", \"disagree\", \"neutral\", \"agree\", \"strongly agree\", NA)\nset.seed(123)\ndf &lt;- data.frame(\n  q1 = sample(likert_levels, 100, replace = TRUE),\n  q2 = sample(likert_levels, 100, replace = TRUE),\n  q3 = sample(likert_levels, 100, replace = TRUE),\n  group = sample(c(\"pre\", \"post\"), 100, replace = TRUE)\n) |&gt; \n  mutate(across(-group, ~factor(.x, levels = setdiff(likert_levels, NA))),\n         group = factor(group, levels = c(\"pre\", \"post\")))\n\np &lt;- gglikert(\n  data = df,\n  include = q1:q3,\n  add_labels = FALSE\n)\n\np_df &lt;- layer_data(p)\np_df$correct_x &lt;- (p_df$xmax + p_df$xmin) / 2\np + annotate(geom=\"text\", x = p_df$correct_x, y = p_df$y, label = p_df$count)"
  },
  {
    "objectID": "posts/pie_chart/index.html",
    "href": "posts/pie_chart/index.html",
    "title": "Pie Chart",
    "section": "",
    "text": "Show the code\n# https://stackoverflow.com/questions/77600362/adjusting-the-size-of-several-pie-charts-in-ggplot2\n\nlibrary(dplyr)\nlibrary(ggplot2)\n\n\ndf &lt;- data.frame(Subjects = c(\"Literature\", \"Literature\", \"Geography\", \"Geography\", \"Arts\", \"Arts\", \n                              \"English\", \"English\", \"Math\", \"Math\", \"History\", \"History\", \n                              \"Biology\", \"Biology\", \"French\", \"French\"),\n                 Sex = rep(c(\"Girls\", \"Boys\"), 2),\n                 N = c(15, 20, 30, 22, 77, 40, 14, 17, \n                       80, 78, 52, 65, 32, 56, 89, 41)) |&gt;\n  group_by(Subjects) |&gt;\n  mutate(pct = proportions(N) * 100) |&gt;\n  mutate_at(vars(pct), list(~ round(., 1))) |&gt;\n  ungroup()\n\n\n\ndf |&gt;\n  mutate(size = sum(N), .by = Subjects) |&gt;\n  ggplot(aes(x = sqrt(size)/2, y = pct, fill = Sex)) +\n  geom_col(aes(width = sqrt(size)), color = \"white\", \n           na.rm = TRUE) +\n  coord_polar(\"y\", start = 0) +\n  facet_wrap(~ Subjects,\n             ncol = 4,\n             strip.position = \"bottom\") +\n  geom_text(aes(y = pct, label = paste0(pct, \"%\")), size = 5, \n            position = position_stack(vjust = 0.5))+\n  theme_void() +\n  theme(legend.title=element_blank(),\n        strip.text = element_text(size = 12)) +\n  theme(plot.title = element_text(hjust = 0.0),\n        legend.text = element_text(size = 12),\n        legend.spacing.y = unit(0.0, 'cm'),\n        legend.box.spacing = unit(-2, \"pt\")) + \n  guides(fill = guide_legend(byrow = TRUE)) + \n  scale_fill_brewer(palette = \"Set2\")"
  },
  {
    "objectID": "posts/pie_chart/index.html#likert-plot",
    "href": "posts/pie_chart/index.html#likert-plot",
    "title": "Pie Chart",
    "section": "",
    "text": "Show the code\n# https://stackoverflow.com/questions/77600362/adjusting-the-size-of-several-pie-charts-in-ggplot2\n\nlibrary(dplyr)\nlibrary(ggplot2)\n\n\ndf &lt;- data.frame(Subjects = c(\"Literature\", \"Literature\", \"Geography\", \"Geography\", \"Arts\", \"Arts\", \n                              \"English\", \"English\", \"Math\", \"Math\", \"History\", \"History\", \n                              \"Biology\", \"Biology\", \"French\", \"French\"),\n                 Sex = rep(c(\"Girls\", \"Boys\"), 2),\n                 N = c(15, 20, 30, 22, 77, 40, 14, 17, \n                       80, 78, 52, 65, 32, 56, 89, 41)) |&gt;\n  group_by(Subjects) |&gt;\n  mutate(pct = proportions(N) * 100) |&gt;\n  mutate_at(vars(pct), list(~ round(., 1))) |&gt;\n  ungroup()\n\n\n\ndf |&gt;\n  mutate(size = sum(N), .by = Subjects) |&gt;\n  ggplot(aes(x = sqrt(size)/2, y = pct, fill = Sex)) +\n  geom_col(aes(width = sqrt(size)), color = \"white\", \n           na.rm = TRUE) +\n  coord_polar(\"y\", start = 0) +\n  facet_wrap(~ Subjects,\n             ncol = 4,\n             strip.position = \"bottom\") +\n  geom_text(aes(y = pct, label = paste0(pct, \"%\")), size = 5, \n            position = position_stack(vjust = 0.5))+\n  theme_void() +\n  theme(legend.title=element_blank(),\n        strip.text = element_text(size = 12)) +\n  theme(plot.title = element_text(hjust = 0.0),\n        legend.text = element_text(size = 12),\n        legend.spacing.y = unit(0.0, 'cm'),\n        legend.box.spacing = unit(-2, \"pt\")) + \n  guides(fill = guide_legend(byrow = TRUE)) + \n  scale_fill_brewer(palette = \"Set2\")"
  },
  {
    "objectID": "posts/plotly_animation/index.html",
    "href": "posts/plotly_animation/index.html",
    "title": "Plotly animation",
    "section": "",
    "text": "Show the code\nlibrary(dplyr)\nlibrary(plotly)\nlibrary(knitr)\n\nDF &lt;- data.frame(\n  year = rep(seq(1980L, 2020L), each = 12), \n  month = rep(1:12, 41), \n  month_char = rep(factor(month.abb), 41),\n  avg_depth = runif(492)\n)\n\nDF %&gt;%\n  plot_ly(\n    x = ~year, \n    y = ~avg_depth,\n    frame = ~paste0(sprintf(\"%02d\", month), \" - \", month_char),\n    type = 'bar'\n  ) %&gt;% \n  animation_opts(frame = 1500, redraw = FALSE) %&gt;% # Increase the frame duration for slower animation\n  animation_slider(\n    currentvalue = list(prefix = \"Month: \")\n  )"
  },
  {
    "objectID": "posts/plotly_animation/index.html#animated-bar-chart-plotly",
    "href": "posts/plotly_animation/index.html#animated-bar-chart-plotly",
    "title": "Plotly animation",
    "section": "",
    "text": "Show the code\nlibrary(dplyr)\nlibrary(plotly)\nlibrary(knitr)\n\nDF &lt;- data.frame(\n  year = rep(seq(1980L, 2020L), each = 12), \n  month = rep(1:12, 41), \n  month_char = rep(factor(month.abb), 41),\n  avg_depth = runif(492)\n)\n\nDF %&gt;%\n  plot_ly(\n    x = ~year, \n    y = ~avg_depth,\n    frame = ~paste0(sprintf(\"%02d\", month), \" - \", month_char),\n    type = 'bar'\n  ) %&gt;% \n  animation_opts(frame = 1500, redraw = FALSE) %&gt;% # Increase the frame duration for slower animation\n  animation_slider(\n    currentvalue = list(prefix = \"Month: \")\n  )"
  },
  {
    "objectID": "posts/Pseudomyxoma peritonei/index.html",
    "href": "posts/Pseudomyxoma peritonei/index.html",
    "title": "Pseudomyxoma peritonei",
    "section": "",
    "text": "bla bla this could be a text for my blog"
  },
  {
    "objectID": "posts/Pseudomyxoma peritonei/index.html#this-is-my-test-post",
    "href": "posts/Pseudomyxoma peritonei/index.html#this-is-my-test-post",
    "title": "Pseudomyxoma peritonei",
    "section": "",
    "text": "bla bla this could be a text for my blog"
  },
  {
    "objectID": "readme.html",
    "href": "readme.html",
    "title": "Using this quarto course blog template",
    "section": "",
    "text": "This is a template for using quarto to create a course blog. A course blog can be used in many ways to engage with course content. For example, you could use the blog to post assignments, or to dive more deeply into course material that interests you. By the end of the course, your blog can serve as a portfolio of ways that you engaged in the material. By learning how to use quarto for your blog, you will also be learning new skills for creating and sharing reproducible documents that could be useful to you in the future.\nThe purpose of this page is to provide tips and pointers about blogging with quarto. Quarto is simple enough for creating a basic course blog. However, it is also very deep and can be used to create all sorts of documents, from website, to slide decks, and books.\n\n\nMany questions about quarto can be answered from the quarto documentation located at: https://quarto.org.\nIf you are looking for something specific and don’t know where to find it on the website, use the search tool in the top right corner.\n\n\n\n\nTo use this template you will need a Github.com account, and access to R and Rstudio.\nYou can get access by creating a Github.com account, and downloading the necessary open-source software to your machine.\nIt is also possible to use Rstudio in your web-browser, which does not require downloading any software. There are two sets of instructions, one for the downloading approach, and the other for using Rstudio cloud. Scroll to the bottom for instructions on using Rstudio cloud.\n\n\n\nIn order to use this template you will need to install some free open-source software on your computer.\n\nSign up for a free account at https://github.com. This a website for sharing open-source software, but it can also be used to serve your blog as a website for free.\nDownload Github Desktop and install it on your machine. This should install the version control software git on your system, and you can use Github Desktop to easily push your blog from your local computer so that it can be viewed on Github.com.\nDownload R and install it on your machine. R is a programming language capable of many things, and it needs to be on your machine before you can run R Studio.\nDownload R Studio Desktop and install it on your machine. R Studio is called an “IDE” or integrated development environment, that you can use to write your blog with quarto.\n\n\n\n\nOnce you have the software installed, the next step is to create a quarto blog project in R studio. The collection of files in this template is a pre-made quarto blog project that you can modify for your own purposes. You can also make one yourself in Rstudio.\nAssuming you have downloaded this template, and you have installed the above software, then you need to open quartoCourseBlog.Rproj.\n\n\n\n\nTo find out if everything is working, try rendering the blog. Go to the “Build” Tab and press “Render Website”.\n\nAfter the rendering is complete, you should be able to view your blog. It might show up in the viewer pane like this:\n\nAnd if you press the ‘window-with-an-arrow’ button, you can view the website in your default browser. Quarto websites automatically adjust for the size of the window, so it may appear differently in the viewer pane versus the browser.\n\n\n\nAll of the blog posts are located in the posts folder.\n\nTo make a new post, copy an existing post and then modify it. For example, my posts folder currently contains one post, and it is inside the my_first_post folder.\n\nI can copy the folder and make a new one with the same contents from the Rstudio gear-box menu:\n\nI made a folder for a second post called Example_assignment.\n\nThese are the two files inside the folder. The .qmd file is a plain text file where you will write the blog post. This folder can also be used to store other assets you might put in the post, such as pictures.\n\n\n\nTo write a new post, open the .qmd file, edit the text, and then re-render the website. This is what the text in the .qmd file looked like when I copied it.\n\nThe text at the top between the “---” is called YAML, and provides meta-data for your document. This is where you can change the title, date, name, and add keywords if you want.\nThe rest of the document is for the main body of the post. For example, I changed the text to read:\n\n\n\n\n\nRender the website from the build tab again to see your new post.\n\n\n\nTo share your blog online you will have to publish it on a server that can be accessed by other people on the internet. There are multiple ways to do this step, and I recommend using Github pages. You can view more in-depth instructions from quarto here https://quarto.org/docs/publishing/github-pages.html.\nHere are the steps:\n\nOpen Github Desktop\nGo to preferences and sign in to your Github.com account\n“Add” your blog project folder to Github Desktop\nThere should be an option for a commit message, write a note in there like “first commit”.\nPublish to github.com and uncheck private repository so that other people will be able to see your repository.\nYou should now be able to see your new repository in your github.com profile, which means you should be able to see a copy of your blog files in the repository.\nActivate Github pages for your repository (under repository settings), and serve the page from the “docs” folder.\nAccess the blog from the url generated by the github pages settings page.\n\n\n\n\nWhenever you make changes to your blog project that you want to share online follow these steps:\n\nMake changes to your blog, like writing a new post, or editing an old one.\nRender the website in R-studio. What you see here should be what you will see later on Github.com\nOpen Github Desktop and Commit your changes, by writing brief commit title, and pressing commit.\nThen, use Github Desktop to Push your changes to github.com.\nWait half a minute or so, and you should see your new content appear on the website.\n\n\n\n\nI am planning to add a video overview of these steps soon. In the meantime, these instructions may be enough to get started with R studio cloud and github.com.\n\nSign up for a free account with posit cloud here https://posit.cloud/plans/free\nSign up for a free https://github.com account.\nLog in to Github, and search for this repository https://github.com/CrumpLab/quartoCourseBlog.\n\n\nClick the green “Use this template” Button\nThis will make a copy of the template in your github account, it will show up as one of your repositories\nGive your new repository a name\n\n\nActivate Github pages for your repository (under repository settings), and serve the page from the “docs” folder. You should now be able to view the blog from the url given by github pages.\nLog into Posit Cloud\nCreate a New Project, choose “New Project from Git Repository”\n\n\nenter the URL to the github repository you just made\n\n\nLoad the project, and edit/modify the files (see above for examples of creating new posts etc.)\nTo send your changed files back to github.com you need to do a few steps\n\n\nFrom the Git tab: stage your changes, commit your changes, and push your changes using the green up arrow.\nYou will also need to authenticate your git credentials, and allow Rstudio cloud to update your github repository\nIn the terminal run these two lines, but replace with your name and email\n\n\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"you@example.com\"\n\nWhen you “push” your changes back to Github using the green up arrow, you will be asked to enter a username and password. You can enter the username for your Github.com account, but your password won’t work. You need to set up a personal access token.\nGo to your github.com profile &gt; settings page. Scroll down, click on “&lt;&gt; Developer Settings”, on the left\nClick on personal access tokens, generate a new token, give it repo access. Save the text somewhere and use it as your github password when pushing from RStudio.\n\n\nAt this point you should be able to work on your blog in Rstudio Cloud, and push your changes to have them updated on github.com, which serves your blog online.\n\n\n\n\nSee this growing list of quarto resources for much, much more:\nhttps://github.com/mcanouil/awesome-quarto"
  },
  {
    "objectID": "readme.html#quarto-documentation",
    "href": "readme.html#quarto-documentation",
    "title": "Using this quarto course blog template",
    "section": "",
    "text": "Many questions about quarto can be answered from the quarto documentation located at: https://quarto.org.\nIf you are looking for something specific and don’t know where to find it on the website, use the search tool in the top right corner."
  },
  {
    "objectID": "readme.html#using-this-template",
    "href": "readme.html#using-this-template",
    "title": "Using this quarto course blog template",
    "section": "",
    "text": "To use this template you will need a Github.com account, and access to R and Rstudio.\nYou can get access by creating a Github.com account, and downloading the necessary open-source software to your machine.\nIt is also possible to use Rstudio in your web-browser, which does not require downloading any software. There are two sets of instructions, one for the downloading approach, and the other for using Rstudio cloud. Scroll to the bottom for instructions on using Rstudio cloud."
  },
  {
    "objectID": "readme.html#downloading-the-free-software",
    "href": "readme.html#downloading-the-free-software",
    "title": "Using this quarto course blog template",
    "section": "",
    "text": "In order to use this template you will need to install some free open-source software on your computer.\n\nSign up for a free account at https://github.com. This a website for sharing open-source software, but it can also be used to serve your blog as a website for free.\nDownload Github Desktop and install it on your machine. This should install the version control software git on your system, and you can use Github Desktop to easily push your blog from your local computer so that it can be viewed on Github.com.\nDownload R and install it on your machine. R is a programming language capable of many things, and it needs to be on your machine before you can run R Studio.\nDownload R Studio Desktop and install it on your machine. R Studio is called an “IDE” or integrated development environment, that you can use to write your blog with quarto."
  },
  {
    "objectID": "readme.html#make-a-quarto-blog-project",
    "href": "readme.html#make-a-quarto-blog-project",
    "title": "Using this quarto course blog template",
    "section": "",
    "text": "Once you have the software installed, the next step is to create a quarto blog project in R studio. The collection of files in this template is a pre-made quarto blog project that you can modify for your own purposes. You can also make one yourself in Rstudio.\nAssuming you have downloaded this template, and you have installed the above software, then you need to open quartoCourseBlog.Rproj."
  },
  {
    "objectID": "readme.html#render-the-blog",
    "href": "readme.html#render-the-blog",
    "title": "Using this quarto course blog template",
    "section": "",
    "text": "To find out if everything is working, try rendering the blog. Go to the “Build” Tab and press “Render Website”.\n\nAfter the rendering is complete, you should be able to view your blog. It might show up in the viewer pane like this:\n\nAnd if you press the ‘window-with-an-arrow’ button, you can view the website in your default browser. Quarto websites automatically adjust for the size of the window, so it may appear differently in the viewer pane versus the browser."
  },
  {
    "objectID": "readme.html#make-a-new-blog-post",
    "href": "readme.html#make-a-new-blog-post",
    "title": "Using this quarto course blog template",
    "section": "",
    "text": "All of the blog posts are located in the posts folder.\n\nTo make a new post, copy an existing post and then modify it. For example, my posts folder currently contains one post, and it is inside the my_first_post folder.\n\nI can copy the folder and make a new one with the same contents from the Rstudio gear-box menu:\n\nI made a folder for a second post called Example_assignment.\n\nThese are the two files inside the folder. The .qmd file is a plain text file where you will write the blog post. This folder can also be used to store other assets you might put in the post, such as pictures.\n\n\n\nTo write a new post, open the .qmd file, edit the text, and then re-render the website. This is what the text in the .qmd file looked like when I copied it.\n\nThe text at the top between the “---” is called YAML, and provides meta-data for your document. This is where you can change the title, date, name, and add keywords if you want.\nThe rest of the document is for the main body of the post. For example, I changed the text to read:"
  },
  {
    "objectID": "readme.html#re-render-to-see-your-changes",
    "href": "readme.html#re-render-to-see-your-changes",
    "title": "Using this quarto course blog template",
    "section": "",
    "text": "Render the website from the build tab again to see your new post."
  },
  {
    "objectID": "readme.html#share-your-blog-on-github.com",
    "href": "readme.html#share-your-blog-on-github.com",
    "title": "Using this quarto course blog template",
    "section": "",
    "text": "To share your blog online you will have to publish it on a server that can be accessed by other people on the internet. There are multiple ways to do this step, and I recommend using Github pages. You can view more in-depth instructions from quarto here https://quarto.org/docs/publishing/github-pages.html.\nHere are the steps:\n\nOpen Github Desktop\nGo to preferences and sign in to your Github.com account\n“Add” your blog project folder to Github Desktop\nThere should be an option for a commit message, write a note in there like “first commit”.\nPublish to github.com and uncheck private repository so that other people will be able to see your repository.\nYou should now be able to see your new repository in your github.com profile, which means you should be able to see a copy of your blog files in the repository.\nActivate Github pages for your repository (under repository settings), and serve the page from the “docs” folder.\nAccess the blog from the url generated by the github pages settings page."
  },
  {
    "objectID": "readme.html#pushing-new-posts-to-github.com",
    "href": "readme.html#pushing-new-posts-to-github.com",
    "title": "Using this quarto course blog template",
    "section": "",
    "text": "Whenever you make changes to your blog project that you want to share online follow these steps:\n\nMake changes to your blog, like writing a new post, or editing an old one.\nRender the website in R-studio. What you see here should be what you will see later on Github.com\nOpen Github Desktop and Commit your changes, by writing brief commit title, and pressing commit.\nThen, use Github Desktop to Push your changes to github.com.\nWait half a minute or so, and you should see your new content appear on the website."
  },
  {
    "objectID": "readme.html#posit-cloud-formerly-rstudio-cloud",
    "href": "readme.html#posit-cloud-formerly-rstudio-cloud",
    "title": "Using this quarto course blog template",
    "section": "",
    "text": "I am planning to add a video overview of these steps soon. In the meantime, these instructions may be enough to get started with R studio cloud and github.com.\n\nSign up for a free account with posit cloud here https://posit.cloud/plans/free\nSign up for a free https://github.com account.\nLog in to Github, and search for this repository https://github.com/CrumpLab/quartoCourseBlog.\n\n\nClick the green “Use this template” Button\nThis will make a copy of the template in your github account, it will show up as one of your repositories\nGive your new repository a name\n\n\nActivate Github pages for your repository (under repository settings), and serve the page from the “docs” folder. You should now be able to view the blog from the url given by github pages.\nLog into Posit Cloud\nCreate a New Project, choose “New Project from Git Repository”\n\n\nenter the URL to the github repository you just made\n\n\nLoad the project, and edit/modify the files (see above for examples of creating new posts etc.)\nTo send your changed files back to github.com you need to do a few steps\n\n\nFrom the Git tab: stage your changes, commit your changes, and push your changes using the green up arrow.\nYou will also need to authenticate your git credentials, and allow Rstudio cloud to update your github repository\nIn the terminal run these two lines, but replace with your name and email\n\n\ngit config --global user.name \"Your Name\"\ngit config --global user.email \"you@example.com\"\n\nWhen you “push” your changes back to Github using the green up arrow, you will be asked to enter a username and password. You can enter the username for your Github.com account, but your password won’t work. You need to set up a personal access token.\nGo to your github.com profile &gt; settings page. Scroll down, click on “&lt;&gt; Developer Settings”, on the left\nClick on personal access tokens, generate a new token, give it repo access. Save the text somewhere and use it as your github password when pushing from RStudio.\n\n\nAt this point you should be able to work on your blog in Rstudio Cloud, and push your changes to have them updated on github.com, which serves your blog online."
  },
  {
    "objectID": "readme.html#more-quarto",
    "href": "readme.html#more-quarto",
    "title": "Using this quarto course blog template",
    "section": "",
    "text": "See this growing list of quarto resources for much, much more:\nhttps://github.com/mcanouil/awesome-quarto"
  },
  {
    "objectID": "posts/glyph/index.html",
    "href": "posts/glyph/index.html",
    "title": "Key glyph for legend",
    "section": "",
    "text": "Show the code\n# https://stackoverflow.com/questions/77809065/ggplot2-legend-icon-mismatch-for-horizontal-and-vertical-lines#77809293\n# https://bookdown.dongzhuoer.com/hadley/ggplot2-book/legend-glyph.html\n# https://ggplot2.tidyverse.org/reference/draw_key.html\n# https://stackoverflow.com/questions/65798204/how-to-avoid-the-crossing-effect-in-legend-with-geom-vline-and-geom-hline-on-t\n\nlibrary(ggplot2)\n\nggplot(iris, aes(Petal.Width, Petal.Length)) +\n  geom_point(aes(color = Species)) +\n  geom_hline(aes(yintercept = 4, lty = 'Horizontal'),\n             color = 'steelblue', lwd = 2, key_glyph = 'path') +\n  geom_vline(aes(xintercept = 2, linewidth = 'Vertical'),\n             color = 'firebrick', key_glyph = 'vline') +\n  guides(color = guide_legend(order = 1),\n         linewidth = guide_legend(title = NULL, order = 2),\n         linetype = guide_legend(title = NULL, order = 3))\n\n\n\n\n\nShow the code\n# OR\n\n# library(ggplot2)\n# glyph_vline &lt;- function(data, params, size) {\n#   if (data$colour == 'firebrick') {\n#     draw_key_vline(data, params, size)\n#   } else {\n#     zeroGrob()\n#   }\n# }\n# \n# glyph_hline &lt;- function(data, params, size) {\n#   if (data$colour == 'steelblue') {\n#     draw_key_path(data, params, size)\n#   } else {\n#     zeroGrob()\n#   }\n# }\n# \n# ggplot(iris, aes(Petal.Width, Petal.Length)) +\n#   geom_point(aes(color = Species)) +\n#   geom_hline(aes(yintercept = 4, lty = 'Horizontal'),\n#              color = 'steelblue', lwd = 2, key_glyph = glyph_hline) +\n#   geom_vline(aes(xintercept = 2, lty = 'Vertical'),\n#              color = 'firebrick', lwd = 2, key_glyph = glyph_vline) +\n#   scale_linetype_manual(name = \"Lines\", values = c(\"solid\",\"solid\")) +\n#   guides(lty = guide_legend(title = 'Lines',\n#                             override.aes = list(color = c('steelblue', 'firebrick'),\n#                                                 lty = c('solid', 'solid'))))"
  },
  {
    "objectID": "posts/glyph/index.html#likert-plot",
    "href": "posts/glyph/index.html#likert-plot",
    "title": "Key glyph for legend",
    "section": "",
    "text": "Show the code\n# https://stackoverflow.com/questions/77809065/ggplot2-legend-icon-mismatch-for-horizontal-and-vertical-lines#77809293\n# https://bookdown.dongzhuoer.com/hadley/ggplot2-book/legend-glyph.html\n# https://ggplot2.tidyverse.org/reference/draw_key.html\n# https://stackoverflow.com/questions/65798204/how-to-avoid-the-crossing-effect-in-legend-with-geom-vline-and-geom-hline-on-t\n\nlibrary(ggplot2)\n\nggplot(iris, aes(Petal.Width, Petal.Length)) +\n  geom_point(aes(color = Species)) +\n  geom_hline(aes(yintercept = 4, lty = 'Horizontal'),\n             color = 'steelblue', lwd = 2, key_glyph = 'path') +\n  geom_vline(aes(xintercept = 2, linewidth = 'Vertical'),\n             color = 'firebrick', key_glyph = 'vline') +\n  guides(color = guide_legend(order = 1),\n         linewidth = guide_legend(title = NULL, order = 2),\n         linetype = guide_legend(title = NULL, order = 3))\n\n\n\n\n\nShow the code\n# OR\n\n# library(ggplot2)\n# glyph_vline &lt;- function(data, params, size) {\n#   if (data$colour == 'firebrick') {\n#     draw_key_vline(data, params, size)\n#   } else {\n#     zeroGrob()\n#   }\n# }\n# \n# glyph_hline &lt;- function(data, params, size) {\n#   if (data$colour == 'steelblue') {\n#     draw_key_path(data, params, size)\n#   } else {\n#     zeroGrob()\n#   }\n# }\n# \n# ggplot(iris, aes(Petal.Width, Petal.Length)) +\n#   geom_point(aes(color = Species)) +\n#   geom_hline(aes(yintercept = 4, lty = 'Horizontal'),\n#              color = 'steelblue', lwd = 2, key_glyph = glyph_hline) +\n#   geom_vline(aes(xintercept = 2, lty = 'Vertical'),\n#              color = 'firebrick', lwd = 2, key_glyph = glyph_vline) +\n#   scale_linetype_manual(name = \"Lines\", values = c(\"solid\",\"solid\")) +\n#   guides(lty = guide_legend(title = 'Lines',\n#                             override.aes = list(color = c('steelblue', 'firebrick'),\n#                                                 lty = c('solid', 'solid'))))"
  },
  {
    "objectID": "posts/dotplot/index.html",
    "href": "posts/dotplot/index.html",
    "title": "dotplot",
    "section": "",
    "text": "Show the code\n# https://stackoverflow.com/questions/71522196/how-to-customize-a-dumbbell-plot-in-r\n\nlibrary(ggplot2)\nlibrary(dplyr)\n\nSubpopulation &lt;- c(\"Female\", \"Female\", \"Male\", \"Male\", \"Low income\",\"Low income\", \"Income &lt; 65k\", \"Income &lt; 65k\",\n\"Student\", \"Student\", \"Teacher\", \"Teacher\", \"Professor\", \"Professor\", \"Black\", \"Black\",\n\"Hispanic\", \"Hispanic\", \"Conservative\", \"Conservative\",  \"Liberal\",\n\"Liberal\", \"Progressive\", \"Progressive\")\nTreatment &lt;- c(\"Treatment\", \"Pro\", \"Treatment\", \"Pro\", \"Treatment\", \"Pro\", \"Treatment\", \"Pro\", \"Treatment\", \"Pro\", \"Treatment\", \"Pro\", \"Treatment\", \"Pro\",\n\"Treatment\", \"Pro\", \"Treatment\", \"Pro\", \"Treatment\", \"Pro\", \"Treatment\", \"Pro\", \"Treatment\", \"Pro\")\nValue &lt;- c(\"57.3\", \"87.1\", \"62.54\", \"74.4\", \"54.6\", \"86.2\", \"41.3\", \"61.1\", \"39.6\", \"72.7\", \"63.5\", \"82.8\",\n\"64.6\", \"11.1\", \"37.4\", \"74.5\", \"58.6\", \"77.8\", \"47.6\", \"80\", \"75.6\", \"89\", \"54.1\", \"83.3\")\nmydf &lt;- data.frame(Subpopulation, Treatment, Value) ##data\nmydf$Value &lt;- as.numeric(mydf$Value)\n\nmydf %&gt;%\n  group_by(Subpopulation) %&gt;%\n  mutate(Difference = Value - lead(Value),\n         Position = Value - (0.5 * Difference)) %&gt;%\n  ggplot(aes(x = Value, y = Subpopulation)) +\n  geom_vline(xintercept = c(41.5, 72.2),\n             lty = 2, alpha = 0.5) +\n  annotate(geom = \"text\",\n           x = c(41.5),\n           y = \"\",\n           label = \"Average: 41.5\") +\n  annotate(geom = \"text\",\n           x = c(72.2),\n           y = \"\",\n           label = \"Average: 72.2\") +\n  coord_cartesian(clip = \"off\") +\n  geom_line(aes(group = Subpopulation)) +\n  geom_point(aes(color = Treatment), size=3) +\n  geom_text(aes(label = abs(Difference),\n                y = Subpopulation,\n                x = Position),\n            nudge_y = 0.25, size = 3) +\n  theme_classic(base_size = 12) +\n  theme(legend.position = \"top\") +\n  scale_color_brewer(palette = \"Dark2\") +\n  theme(axis.ticks.y = element_line(colour = c(\"transparent\",\n                                               rep(\"black\", 12))))"
  },
  {
    "objectID": "posts/dotplot/index.html#likert-plot",
    "href": "posts/dotplot/index.html#likert-plot",
    "title": "dotplot",
    "section": "",
    "text": "Show the code\n# https://stackoverflow.com/questions/71522196/how-to-customize-a-dumbbell-plot-in-r\n\nlibrary(ggplot2)\nlibrary(dplyr)\n\nSubpopulation &lt;- c(\"Female\", \"Female\", \"Male\", \"Male\", \"Low income\",\"Low income\", \"Income &lt; 65k\", \"Income &lt; 65k\",\n\"Student\", \"Student\", \"Teacher\", \"Teacher\", \"Professor\", \"Professor\", \"Black\", \"Black\",\n\"Hispanic\", \"Hispanic\", \"Conservative\", \"Conservative\",  \"Liberal\",\n\"Liberal\", \"Progressive\", \"Progressive\")\nTreatment &lt;- c(\"Treatment\", \"Pro\", \"Treatment\", \"Pro\", \"Treatment\", \"Pro\", \"Treatment\", \"Pro\", \"Treatment\", \"Pro\", \"Treatment\", \"Pro\", \"Treatment\", \"Pro\",\n\"Treatment\", \"Pro\", \"Treatment\", \"Pro\", \"Treatment\", \"Pro\", \"Treatment\", \"Pro\", \"Treatment\", \"Pro\")\nValue &lt;- c(\"57.3\", \"87.1\", \"62.54\", \"74.4\", \"54.6\", \"86.2\", \"41.3\", \"61.1\", \"39.6\", \"72.7\", \"63.5\", \"82.8\",\n\"64.6\", \"11.1\", \"37.4\", \"74.5\", \"58.6\", \"77.8\", \"47.6\", \"80\", \"75.6\", \"89\", \"54.1\", \"83.3\")\nmydf &lt;- data.frame(Subpopulation, Treatment, Value) ##data\nmydf$Value &lt;- as.numeric(mydf$Value)\nmydf\n\n\n   Subpopulation Treatment Value\n1         Female Treatment 57.30\n2         Female       Pro 87.10\n3           Male Treatment 62.54\n4           Male       Pro 74.40\n5     Low income Treatment 54.60\n6     Low income       Pro 86.20\n7   Income &lt; 65k Treatment 41.30\n8   Income &lt; 65k       Pro 61.10\n9        Student Treatment 39.60\n10       Student       Pro 72.70\n11       Teacher Treatment 63.50\n12       Teacher       Pro 82.80\n13     Professor Treatment 64.60\n14     Professor       Pro 11.10\n15         Black Treatment 37.40\n16         Black       Pro 74.50\n17      Hispanic Treatment 58.60\n18      Hispanic       Pro 77.80\n19  Conservative Treatment 47.60\n20  Conservative       Pro 80.00\n21       Liberal Treatment 75.60\n22       Liberal       Pro 89.00\n23   Progressive Treatment 54.10\n24   Progressive       Pro 83.30\n\n\nShow the code\nmydf %&gt;%\n  group_by(Subpopulation) %&gt;%\n  mutate(Difference = Value - lead(Value),\n         Position = Value - (0.5 * Difference)) %&gt;%\n  ggplot(aes(x = Value, y = Subpopulation)) +\n  geom_vline(xintercept = c(41.5, 72.2),\n             lty = 2, alpha = 0.5) +\n  annotate(geom = \"text\",\n           x = c(41.5),\n           y = \"\",\n           label = \"Average: 41.5\") +\n  annotate(geom = \"text\",\n           x = c(72.2),\n           y = \"\",\n           label = \"Average: 72.2\") +\n  coord_cartesian(clip = \"off\") +\n  geom_line(aes(group = Subpopulation)) +\n  geom_point(aes(color = Treatment), size=3) +\n  geom_text(aes(label = abs(Difference),\n                y = Subpopulation,\n                x = Position),\n            nudge_y = 0.25, size = 3) +\n  theme_classic(base_size = 12) +\n  theme(legend.position = \"top\") +\n  scale_color_brewer(palette = \"Dark2\") +\n  theme(axis.ticks.y = element_line(colour = c(\"transparent\",\n                                               rep(\"black\", 12))))"
  },
  {
    "objectID": "posts/dotplot/index.html#dotplot",
    "href": "posts/dotplot/index.html#dotplot",
    "title": "dotplot",
    "section": "",
    "text": "Show the code\n# https://stackoverflow.com/questions/71522196/how-to-customize-a-dumbbell-plot-in-r\n\nlibrary(ggplot2)\nlibrary(dplyr)\n\nSubpopulation &lt;- c(\"Female\", \"Female\", \"Male\", \"Male\", \"Low income\",\"Low income\", \"Income &lt; 65k\", \"Income &lt; 65k\",\n\"Student\", \"Student\", \"Teacher\", \"Teacher\", \"Professor\", \"Professor\", \"Black\", \"Black\",\n\"Hispanic\", \"Hispanic\", \"Conservative\", \"Conservative\",  \"Liberal\",\n\"Liberal\", \"Progressive\", \"Progressive\")\nTreatment &lt;- c(\"Treatment\", \"Pro\", \"Treatment\", \"Pro\", \"Treatment\", \"Pro\", \"Treatment\", \"Pro\", \"Treatment\", \"Pro\", \"Treatment\", \"Pro\", \"Treatment\", \"Pro\",\n\"Treatment\", \"Pro\", \"Treatment\", \"Pro\", \"Treatment\", \"Pro\", \"Treatment\", \"Pro\", \"Treatment\", \"Pro\")\nValue &lt;- c(\"57.3\", \"87.1\", \"62.54\", \"74.4\", \"54.6\", \"86.2\", \"41.3\", \"61.1\", \"39.6\", \"72.7\", \"63.5\", \"82.8\",\n\"64.6\", \"11.1\", \"37.4\", \"74.5\", \"58.6\", \"77.8\", \"47.6\", \"80\", \"75.6\", \"89\", \"54.1\", \"83.3\")\nmydf &lt;- data.frame(Subpopulation, Treatment, Value) ##data\nmydf$Value &lt;- as.numeric(mydf$Value)\n\nmydf %&gt;%\n  group_by(Subpopulation) %&gt;%\n  mutate(Difference = Value - lead(Value),\n         Position = Value - (0.5 * Difference)) %&gt;%\n  ggplot(aes(x = Value, y = Subpopulation)) +\n  geom_vline(xintercept = c(41.5, 72.2),\n             lty = 2, alpha = 0.5) +\n  annotate(geom = \"text\",\n           x = c(41.5),\n           y = \"\",\n           label = \"Average: 41.5\") +\n  annotate(geom = \"text\",\n           x = c(72.2),\n           y = \"\",\n           label = \"Average: 72.2\") +\n  coord_cartesian(clip = \"off\") +\n  geom_line(aes(group = Subpopulation)) +\n  geom_point(aes(color = Treatment), size=3) +\n  geom_text(aes(label = abs(Difference),\n                y = Subpopulation,\n                x = Position),\n            nudge_y = 0.25, size = 3) +\n  theme_classic(base_size = 12) +\n  theme(legend.position = \"top\") +\n  scale_color_brewer(palette = \"Dark2\") +\n  theme(axis.ticks.y = element_line(colour = c(\"transparent\",\n                                               rep(\"black\", 12))))"
  },
  {
    "objectID": "posts/glyph/index.html#key-glyph-legend",
    "href": "posts/glyph/index.html#key-glyph-legend",
    "title": "Key glyph for legend",
    "section": "",
    "text": "Show the code\n# https://stackoverflow.com/questions/77809065/ggplot2-legend-icon-mismatch-for-horizontal-and-vertical-lines#77809293\n# https://bookdown.dongzhuoer.com/hadley/ggplot2-book/legend-glyph.html\n# https://ggplot2.tidyverse.org/reference/draw_key.html\n# https://stackoverflow.com/questions/65798204/how-to-avoid-the-crossing-effect-in-legend-with-geom-vline-and-geom-hline-on-t\n\nlibrary(ggplot2)\n\nggplot(iris, aes(Petal.Width, Petal.Length)) +\n  geom_point(aes(color = Species)) +\n  geom_hline(aes(yintercept = 4, lty = 'Horizontal'),\n             color = 'steelblue', lwd = 2, key_glyph = 'path') +\n  geom_vline(aes(xintercept = 2, linewidth = 'Vertical'),\n             color = 'firebrick', key_glyph = 'vline') +\n  guides(color = guide_legend(order = 1),\n         linewidth = guide_legend(title = NULL, order = 2),\n         linetype = guide_legend(title = NULL, order = 3))\n\n\n\n\n\nShow the code\n# OR\n\n# library(ggplot2)\n# glyph_vline &lt;- function(data, params, size) {\n#   if (data$colour == 'firebrick') {\n#     draw_key_vline(data, params, size)\n#   } else {\n#     zeroGrob()\n#   }\n# }\n# \n# glyph_hline &lt;- function(data, params, size) {\n#   if (data$colour == 'steelblue') {\n#     draw_key_path(data, params, size)\n#   } else {\n#     zeroGrob()\n#   }\n# }\n# \n# ggplot(iris, aes(Petal.Width, Petal.Length)) +\n#   geom_point(aes(color = Species)) +\n#   geom_hline(aes(yintercept = 4, lty = 'Horizontal'),\n#              color = 'steelblue', lwd = 2, key_glyph = glyph_hline) +\n#   geom_vline(aes(xintercept = 2, lty = 'Vertical'),\n#              color = 'firebrick', lwd = 2, key_glyph = glyph_vline) +\n#   scale_linetype_manual(name = \"Lines\", values = c(\"solid\",\"solid\")) +\n#   guides(lty = guide_legend(title = 'Lines',\n#                             override.aes = list(color = c('steelblue', 'firebrick'),\n#                                                 lty = c('solid', 'solid'))))"
  },
  {
    "objectID": "posts/pie_chart/index.html#pie-chart",
    "href": "posts/pie_chart/index.html#pie-chart",
    "title": "Pie Chart",
    "section": "",
    "text": "Show the code\n# https://stackoverflow.com/questions/77600362/adjusting-the-size-of-several-pie-charts-in-ggplot2\n\nlibrary(dplyr)\nlibrary(ggplot2)\n\n\ndf &lt;- data.frame(Subjects = c(\"Literature\", \"Literature\", \"Geography\", \"Geography\", \"Arts\", \"Arts\", \n                              \"English\", \"English\", \"Math\", \"Math\", \"History\", \"History\", \n                              \"Biology\", \"Biology\", \"French\", \"French\"),\n                 Sex = rep(c(\"Girls\", \"Boys\"), 2),\n                 N = c(15, 20, 30, 22, 77, 40, 14, 17, \n                       80, 78, 52, 65, 32, 56, 89, 41)) |&gt;\n  group_by(Subjects) |&gt;\n  mutate(pct = proportions(N) * 100) |&gt;\n  mutate_at(vars(pct), list(~ round(., 1))) |&gt;\n  ungroup()\n\n\n\ndf |&gt;\n  mutate(size = sum(N), .by = Subjects) |&gt;\n  ggplot(aes(x = sqrt(size)/2, y = pct, fill = Sex)) +\n  geom_col(aes(width = sqrt(size)), color = \"white\", \n           na.rm = TRUE) +\n  coord_polar(\"y\", start = 0) +\n  facet_wrap(~ Subjects,\n             ncol = 4,\n             strip.position = \"bottom\") +\n  geom_text(aes(y = pct, label = paste0(pct, \"%\")), size = 5, \n            position = position_stack(vjust = 0.5))+\n  theme_void() +\n  theme(legend.title=element_blank(),\n        strip.text = element_text(size = 12)) +\n  theme(plot.title = element_text(hjust = 0.0),\n        legend.text = element_text(size = 12),\n        legend.spacing.y = unit(0.0, 'cm'),\n        legend.box.spacing = unit(-2, \"pt\")) + \n  guides(fill = guide_legend(byrow = TRUE)) + \n  scale_fill_brewer(palette = \"Set2\")"
  },
  {
    "objectID": "posts/Treemap/index.html",
    "href": "posts/Treemap/index.html",
    "title": "Plotly treemap",
    "section": "",
    "text": "Show the code\nlibrary(plotly)\nlibrary(dplyr)\n\ndtd7 &lt;- structure(\n  list(\n    topic = structure(\n      c(9L, 8L, 4L, 7L, 2L, 6L, 1L, 3L, 5L, 10L, 13L, 11L, 12L),\n      .Label = c(\"Owners' Equivalent Rent of Residences\", \"Rent of Primary Residence\",\n                 \"New Vehicles\", \"Used Cars and Trucks\", \"Cereals And bakery Products\",\n                 \"Motor Vehicle Maintenance and Repair\", \"Airline Fares\",\n                 \"Apparel\", \"Alcoholic Beverages\", \"Hospital Services\",\n                 \"Tobacco and Smoking\", \"Physicians Services\", \"Gasoline All Types\",\n                 \"Electricity\", \"Utility (Piped) Gas Services\",\n                 \"Nonalcoholic Beverages and Beverage Materials\",\n                 \"Food Away From Home\", \"Meats Poultry Fish and\", \n                 \"Fruits and Vegetables\", \"Dairy and Related Products\",\n                 \"Cereals And bakery Products\", \"Other Foods at Home\"),\n      class = \"factor\"),\n    n = structure(\n      c(4L, 3L, 9L, 11L, 12L, 2L, 1L, 6L, 10L, 5L, 7L, 8L, 1L),\n      .Label = c(\"6.7\", \"6.9\", \"1.4\", \"3.8\", \"19.2\", \"8.5\", \"12.1\", \"1.1\", \"5\", \"2.9\", \n                 \"6.3\", \"7.7\", \"0.7\", \"8.9\", \"3.4\", \"10.4\", \"2.9\", \"5.3\", \"0.1\", \"0.4\", \n                 \"1.4\", \"3.4\", \"3.3\"),\n      class = \"factor\")\n  ),\n  class = \"data.frame\",\n  row.names = c(NA, -13L)\n)\n\n\n\nplot_ly(\n  dtd7 %&gt;% \n    mutate(n = as.numeric(as.character(n))), #transform to numeric\n  labels = ~topic,\n  parents = NA,\n  values = ~n,\n  type = 'treemap',\n  hovertemplate = \"Category: %{label}&lt;br&gt;Percent: %{value}%&lt;extra&gt;&lt;/extra&gt;\" #added % after value!\n)"
  },
  {
    "objectID": "posts/Treemap/index.html#plotly-treemap",
    "href": "posts/Treemap/index.html#plotly-treemap",
    "title": "Plotly treemap",
    "section": "",
    "text": "Show the code\nlibrary(plotly)\nlibrary(dplyr)\n\ndtd7 &lt;- structure(\n  list(\n    topic = structure(\n      c(9L, 8L, 4L, 7L, 2L, 6L, 1L, 3L, 5L, 10L, 13L, 11L, 12L),\n      .Label = c(\"Owners' Equivalent Rent of Residences\", \"Rent of Primary Residence\",\n                 \"New Vehicles\", \"Used Cars and Trucks\", \"Cereals And bakery Products\",\n                 \"Motor Vehicle Maintenance and Repair\", \"Airline Fares\",\n                 \"Apparel\", \"Alcoholic Beverages\", \"Hospital Services\",\n                 \"Tobacco and Smoking\", \"Physicians Services\", \"Gasoline All Types\",\n                 \"Electricity\", \"Utility (Piped) Gas Services\",\n                 \"Nonalcoholic Beverages and Beverage Materials\",\n                 \"Food Away From Home\", \"Meats Poultry Fish and\", \n                 \"Fruits and Vegetables\", \"Dairy and Related Products\",\n                 \"Cereals And bakery Products\", \"Other Foods at Home\"),\n      class = \"factor\"),\n    n = structure(\n      c(4L, 3L, 9L, 11L, 12L, 2L, 1L, 6L, 10L, 5L, 7L, 8L, 1L),\n      .Label = c(\"6.7\", \"6.9\", \"1.4\", \"3.8\", \"19.2\", \"8.5\", \"12.1\", \"1.1\", \"5\", \"2.9\", \n                 \"6.3\", \"7.7\", \"0.7\", \"8.9\", \"3.4\", \"10.4\", \"2.9\", \"5.3\", \"0.1\", \"0.4\", \n                 \"1.4\", \"3.4\", \"3.3\"),\n      class = \"factor\")\n  ),\n  class = \"data.frame\",\n  row.names = c(NA, -13L)\n)\n\n\n\nplot_ly(\n  dtd7 %&gt;% \n    mutate(n = as.numeric(as.character(n))), #transform to numeric\n  labels = ~topic,\n  parents = NA,\n  values = ~n,\n  type = 'treemap',\n  hovertemplate = \"Category: %{label}&lt;br&gt;Percent: %{value}%&lt;extra&gt;&lt;/extra&gt;\" #added % after value!\n)"
  }
]